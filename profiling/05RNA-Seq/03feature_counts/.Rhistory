mk=fread("tartget_SNP2.txt",head=F,data.table=F)
library(data.table)
mk=fread("tartget_SNP2.txt",head=F,data.table=F)
View(mk)
setwd("E:/UNL_Yang_lab/N_treatment_Jing/08_RNA_SEQ/N_treatment_Four_lines/04DEG/Get_DEG")
library("data.table")
f=list.files(path = ".",pattern = "csv")
d=fread("DESeq2_DEG_TEO_MZ_deseq2_results.csv",header = T,sep=",",data.table=F)
i=f[1]
f
setwd("E:/UNL_Yang_lab/N_treatment_Jing/08_RNA_SEQ/N_treatment_Four_lines/04DEG")
library(data.table)
library(Ropt)
library(DESeq2)
library(edgeR)
library(pheatmap)
library("RColorBrewer")
##http://www.bioconductor.org/packages/devel/bioc/vignettes/DESeq2/inst/doc/DESeq2.html
############????????????????????????#############################
ct=fread("counts.txt",head=T,data.table=F,skip=1)
ct[,1]=gsub("gene:","",ct[,1])
rownames(ct)=ct[,1]
ct=ct[,-c(1:6)]
group_info <- read.table("group_info.txt", stringsAsFactors = F, header = T)
g_Root_HN=group_info[group_info[,4]=="Root" & group_info[,5]=="HN",]
g_Root_LN=group_info[group_info[,4]=="Root" & group_info[,5]=="LN",]
g_Root_new=group_info[group_info[,4]=="Root" & group_info[,6]=="NEW",]
g_Root_old=group_info[group_info[,4]=="Root" & group_info[,6]=="OLD",]
g_Root=group_info[group_info[,4]=="Root",]
ct_hn_r=ct[,g_Root_HN[,7]]
ct_ln_r=ct[,g_Root_LN[,7]]
ct_r_new=ct[,g_Root_new[,7]]
ct_r_old=ct[,g_Root_old[,7]]
ct_r=ct[,g_Root[,7]]
View(g_Root)
##############Interaction between pop and N
ct=ct_r
pop <- factor(g_Root[,6])
treament <- factor(g_Root[,5])
geneLists <-  row.names(ct)
# ????????????
keepGene <- rowSums(edgeR::cpm(ct)>0) >=8 ##Filtering. Only keep in the analysis those genes which had > 0 reads per million mapped reads in at least two libraries.
table(keepGene);dim(ct)
dim(ct[keepGene,])
ct <- ct[keepGene,]
rownames(ct) <- geneLists[keepGene]
(colData <- data.frame(row.names=colnames(ct), group_list=pop,treament=treament) )
### ??????DESeqDataSet??????
# ?????????????????????????????????????????????????????????????????????????????????????????????:
dds <- DESeqDataSetFromMatrix(countData = ct,
colData = colData,
design = ~ treament+ group_list+treament:group_list)
dds <- dds[ rowSums(counts(dds)) > 2 ,] ##??????????????????,????????????
dds <- DESeq(dds)
plotDispEsts(dds, main="Dispersion plot")
resultsNames(dds)
res <- results(dds,name="treamentLN.group_listOLD")
mcols(res,use.names= TRUE) # ??????res????????????????????????
summary(res,alpha = 0.01) ##alpha: the adjusted p-value cutoff
# ??????padj????????????
res <- res[order(res$padj),]
write.csv(res,"DESeq2_DEG_root_pop_treat_interaction_results2.csv",quote = F,row.names = T) # ???????????????
setwd("E:/UNL_Yang_lab/N_treatment_Jing/08_RNA_SEQ/N_treatment_Four_lines/04DEG/Get_DEG")
library(Ropt)
f=list.files(path = ".",pattern = "csv")
f
i=f[1]
d=fread(i,header = T,sep=",",data.table=F)
head(d)
d1=d[d[,7]<0.05 & d[,3]>2,]
i
View(d1)
d1=na.omit(d1)
View(d1)
View(d1)
View(d1)
i
d1=d[d[,7]<0.01 & d[,3]>2,]
d1=d[d[,7]<0.05 & d[,3]>2,]
d1=d[d[,7]<0.05 & d[,3]>1,]
d1=d[d[,7]<0.05 & d[,3]>1.5,]
d1=d[d[,7]<0.01 & d[,3]>1,]
head(d)
d1=d[d[,7]<0.01 & abs(d[,3])>1,]
d1=d[d[,7]<0.01 & abs(d[,3])>2,]
out=gsub("results2.csv","sig.txt")
d=fread(i,header = T,sep=",",data.table=F)
out=gsub("results2.csv","sig.txt",i)
d=fread(i,header = T,sep=",",data.table=F)
d1=d[d[,7]<0.01 & abs(d[,3])>2,]
d1=na.omit(d1)
colnames(d1)[1]=c("Gene")
for(i in f)
{
out=gsub("results2.csv","sig.txt",i)
d=fread(i,header = T,sep=",",data.table=F)
d1=d[d[,7]<0.01 & abs(d[,3])>2,]
d1=na.omit(d1)
colnames(d1)[1]=c("Gene")
write.table(d1,file=out,row.names = F,col.na=T,quote = F,sep="\t")
}
library("data.table")
library(Ropt)
f=list.files(path = ".",pattern = "csv")
for(i in f)
{
out=gsub("csv","sig.txt",i)
d=fread(i,header = T,sep=",",data.table=F)
d1=d[d[,7]<0.01 & abs(d[,3])>2,]
d1=na.omit(d1)
colnames(d1)[1]=c("Gene")
write.table(d1,file=out,row.names = F,col.na=T,quote = F,sep="\t")
}
library(data.table)
library(Ropt)
library(DESeq2)
library(edgeR)
library(pheatmap)
library("RColorBrewer")
m <- matrix(1e6 * rep(c(.125, .25, .25, .5), each=4),
ncol=4, dimnames=list(1:4,1:4))
View(m)
#############FPKM计算
ct=fread("counts.txt",head=T,data.table=F,skip=1)
setwd("E:/UNL_Yang_lab/N_treatment_Jing/08_RNA_SEQ/N_treatment_Four_lines/03feature_counts")
#############FPKM计算
ct=fread("counts.txt",head=T,data.table=F,skip=1)
exon_l=ct[,6]
ct[,1]=gsub("gene:","",ct[,1])
rownames(ct)=ct[,1]
ct=ct[,-c(1:6)]
View(ct)
total_r=apply(ct, 1,sum)
rpk=ct/(exon_l/1000)
View(rpk)
total_r=colSums(ct)
#############FPKM计算
ct=fread("counts.txt",head=T,data.table=F,skip=1)
exon_l=ct[,6]
ct[,1]=gsub("gene:","",ct[,1])
rownames(ct)=ct[,1]
ct=ct[,-c(1:6)]
rpk=ct/(exon_l/1000)
total_r=colSums(ct)
total_r=colSums(ct)/1000000
all(total_r>0)
View(rpk)
#############FPKM计算
ct=fread("counts.txt",head=T,data.table=F,skip=1)
exon_l=ct[,6]
ct[,1]=gsub("gene:","",ct[,1])
rownames(ct)=ct[,1]
ct=ct[,-c(1:6)]
rpk=ct/(exon_l/1000)
total_r=colSums(ct)/1000000
FPKM=t(t(rpk)/total_r)
View(FPKM)
write.csv(FPKM,"FPKM_Old_new_four_lines",quote = F,row.names = T) # 把结果输出
write.csv(FPKM,"FPKM_Old_new_four_lines.csv",quote = F,row.names = T) # 把结果输出
ct=fread("counts.txt",head=T,data.table=F,skip=1)
exon_l=ct[,6]
ct[,1]=gsub("gene:","",ct[,1])
rownames(ct)=ct[,1]
ct=ct[,-c(1:6)]
rpk=ct/(exon_l/1000)
total_r=colSums(ct)/1000000
FPKM=t(t(rpk)/total_r)
write.csv(FPKM,"FPKM_Old_new_four_lines.csv",quote = F,row.names = T) # 把结果输出
ct=fread("counts.txt",head=T,data.table=F,skip=1)
exon_l=ct[,6]
ct[,1]=gsub("gene:","",ct[,1])
rownames(ct)=ct[,1]
ct=ct[,-c(1:6)]
rpk=ct/(exon_l/1000)
tpm <- t(t(rpk)/colSums(rpk) * 1000000)
write.csv(tpm,"TPM_Old_new_four_lines.csv",quote = F,row.names = T) # 把结果输出
d=fread("FPKM_Old_new_four_lines.csv", header=T,data.table=F)
View(d)
d1=d[,-1]
?pca
d2=prcomp(d1)
head(d2)
?prcomp
d2=prcomp(d1,scale=T)
names(d2)
View(d2)
pca=d2$x
head(pca)
d2=prcomp(t(d1),scale=T)
View(d1)
library(PerformanceAnalytics)
install.packages("PerformanceAnalytics")
library(PerformanceAnalytics)
d=fread("FPKM_Old_new_four_lines.csv", header=T,data.table=F)
d1=d[,-1]
chart.Correlation(d1, histogram=TRUE, pch=16,col="skyblue")
test.pr<-princomp(d1,cor=TRUE)
d=fread("FPKM_Old_new_four_lines.csv", header=T,data.table=F)
d1=d[,-1]
test.pr<-princomp(d1,cor=TRUE)
re=summary(test.pr,loadings=TRUE)
summary(test.pr,loadings=TRUE)
pca=re$loadings
class(pca)
pca=as.data.frame(re$loadings)
pca=re$loadings
