ct=fread("counts.txt",head=T,data.table=F,skip=1)
ct[,1]=gsub("gene:","",ct[,1])
rownames(ct)=ct[,1]
ct=ct[,-c(1:6)]
group_info <- read.table("group_info.txt", stringsAsFactors = F, header = T)
g_Root_HN=group_info[group_info[,4]=="Root" & group_info[,5]=="HN",]
g_Root_LN=group_info[group_info[,4]=="Root" & group_info[,5]=="LN",]
g_Root_new=group_info[group_info[,4]=="Root" & group_info[,6]=="NEW",]
g_Root_old=group_info[group_info[,4]=="Root" & group_info[,6]=="OLD",]
g_Root=group_info[group_info[,4]=="Root",]
ct_hn_r=ct[,g_Root_HN[,7]]
ct_ln_r=ct[,g_Root_LN[,7]]
ct_r_new=ct[,g_Root_new[,7]]
ct_r_old=ct[,g_Root_old[,7]]
ct_r=ct[,g_Root[,7]]
View(g_Root)
##############Interaction between pop and N
ct=ct_r
View(ct)
pop <- factor(g_Root[,6])
treament <- factor(g_Root[,5])
geneLists <-  row.names(ct)
# ????????????
keepGene <- rowSums(edgeR::cpm(ct)>0) >=8 ##Filtering. Only keep in the analysis those genes which had > 0 reads per million mapped reads in at least two libraries.
table(keepGene);dim(ct)
dim(ct[keepGene,])
ct <- ct[keepGene,]
rownames(ct) <- geneLists[keepGene]
(colData <- data.frame(row.names=colnames(ct), group_list=pop,treament=treament) )
### ??????DESeqDataSet??????
# ?????????????????????????????????????????????????????????????????????????????????????????????:
dds <- DESeqDataSetFromMatrix(countData = ct,
colData = colData,
design = ~ treament+ group_list+treament:group_list)
dds <- dds[ rowSums(counts(dds)) > 2 ,] ##??????????????????,????????????
dds <- DESeq(dds)
resultsNames(dds)
res <- results(dds,name="treamentLN.group_listOLD")
mcols(res,use.names= TRUE) # ??????res????????????????????????
summary(res,alpha = 0.01) ##alpha: the adjusted p-value cutoff
# ??????padj????????????
res <- res[order(res$padj),]
library(data.table)
library(Ropt)
library(DESeq2)
library(edgeR)
library(pheatmap)
library("RColorBrewer")
##http://www.bioconductor.org/packages/devel/bioc/vignettes/DESeq2/inst/doc/DESeq2.html
############????????????????????????#############################
ct=fread("counts.txt",head=T,data.table=F,skip=1)
ct[,1]=gsub("gene:","",ct[,1])
rownames(ct)=ct[,1]
ct=ct[,-c(1:6)]
group_info <- read.table("group_info.txt", stringsAsFactors = F, header = T)
g_leaf_HN=group_info[group_info[,4]=="Leaf" & group_info[,5]=="HN",]
g_leaf_LN=group_info[group_info[,4]=="Leaf" & group_info[,5]=="LN",]
g_leaf_new=group_info[group_info[,4]=="Leaf" & group_info[,6]=="NEW",]
g_leaf_old=group_info[group_info[,4]=="Leaf" & group_info[,6]=="OLD",]
g_leaf=group_info[group_info[,4]=="Leaf",]
View(g_leaf)
ct_hn_l=ct[,g_leaf_HN[,7]]
ct_ln_l=ct[,g_leaf_LN[,7]]
ct_l_new=ct[,g_leaf_new[,7]]
ct_l_old=ct[,g_leaf_old[,7]]
ct_l=ct[,g_leaf[,7]]
######################simple comparison
ct=ct_l_old
group_list <- factor(g_leaf_old[,5])
genotype <- factor(g_leaf_old[,3])
geneLists <-  row.names(ct)
# ????????????
keepGene <- rowSums(edgeR::cpm(ct)>0) >=4 ##Filtering. Only keep in the analysis those genes which had > 0 reads per million mapped reads in at least two libraries.
table(keepGene);dim(ct)
dim(ct[keepGene,])
ct <- ct[keepGene,]
rownames(ct) <- geneLists[keepGene]
View(ct)
(colData <- data.frame(row.names=colnames(ct), group_list=group_list,genotype=genotype) )
View(group_info)
View(g_leaf_new)
######################simple comparison
ct=ct_l_old
group_list <- factor(g_leaf_old[,5])
genotype <- factor(g_leaf_old[,3])
geneLists <-  row.names(ct)
# ????????????
keepGene <- rowSums(edgeR::cpm(ct)>0) >=4 ##Filtering. Only keep in the analysis those genes which had > 0 reads per million mapped reads in at least two libraries.
table(keepGene);dim(ct)
dim(ct[keepGene,])
ct <- ct[keepGene,]
rownames(ct) <- geneLists[keepGene]
(colData <- data.frame(row.names=colnames(ct), group_list=group_list,genotype=genotype) )
View(colData)
### ??????DESeqDataSet??????
# ?????????????????????????????????????????????????????????????????????????????????????????????:
dds <- DESeqDataSetFromMatrix(countData = ct,
colData = colData,
design = ~ group_list+genotype)
### ??????DESeqDataSet??????
# ?????????????????????????????????????????????????????????????????????????????????????????????:
dds <- DESeqDataSetFromMatrix(countData = ct,
colData = colData,
design = ~ group_list+genotype+group_list:genotype)
?DESeqDataSetFromMatrix
dds <- dds[ rowSums(counts(dds)) > 2 ,] ##??????????????????,????????????
dds <- DESeq(dds)
plotDispEsts(dds, main="Dispersion plot")
res <- results(dds,contrast = c("group_list","LN","HN"))
mcols(res,use.names= TRUE) # ??????res????????????????????????
summary(res,alpha = 0.01) ##alpha: the adjusted p-value cutoff
# ??????padj????????????
res <- res[order(res$padj),]
View(res)
names(res)
res <- results(dds,contrast = c("group_list","LN","HN"))
names(res)
names(dds)
resultsNames(dds)
dds <- makeExampleDESeqDataSet(n=100,m=18)
dds$genotype <- factor(rep(rep(c("I","II","III"),each=3),2))
design(dds) <- ~ genotype + condition + genotype:condition
dds <- DESeq(dds)
resultsNames(dds)
library(data.table)
library(Ropt)
library(DESeq2)
library(edgeR)
library(pheatmap)
library("RColorBrewer")
##http://www.bioconductor.org/packages/devel/bioc/vignettes/DESeq2/inst/doc/DESeq2.html
############????????????????????????#############################
ct=fread("counts.txt",head=T,data.table=F,skip=1)
ct[,1]=gsub("gene:","",ct[,1])
rownames(ct)=ct[,1]
ct=ct[,-c(1:6)]
group_info <- read.table("group_info.txt", stringsAsFactors = F, header = T)
g_leaf_HN=group_info[group_info[,4]=="Leaf" & group_info[,5]=="HN",]
g_leaf_LN=group_info[group_info[,4]=="Leaf" & group_info[,5]=="LN",]
g_leaf_new=group_info[group_info[,4]=="Leaf" & group_info[,6]=="NEW",]
g_leaf_old=group_info[group_info[,4]=="Leaf" & group_info[,6]=="OLD",]
g_leaf=group_info[group_info[,4]=="Leaf",]
ct_hn_l=ct[,g_leaf_HN[,7]]
ct_ln_l=ct[,g_leaf_LN[,7]]
ct_l_new=ct[,g_leaf_new[,7]]
ct_l_old=ct[,g_leaf_old[,7]]
ct_l=ct[,g_leaf[,7]]
######################simple comparison
ct=ct_l_old
View(g_leaf_old)
ct_l=ct[,g_leaf[,7]]
##http://www.bioconductor.org/packages/devel/bioc/vignettes/DESeq2/inst/doc/DESeq2.html
############????????????????????????#############################
ct=fread("counts.txt",head=T,data.table=F,skip=1)
ct[,1]=gsub("gene:","",ct[,1])
rownames(ct)=ct[,1]
ct=ct[,-c(1:6)]
ct_l=ct[,g_leaf[,7]]
ct=ct_l
group_list <- factor(g_leaf[,5])
genotype <- factor(g_leaf[,3])
View(g_leaf)
era=factor(g_leaf[,3])
geneLists <-  row.names(ct)
# ????????????
keepGene <- rowSums(edgeR::cpm(ct)>0) >=4 ##Filtering. Only keep in the analysis those genes which had > 0 reads per million mapped reads in at least two libraries.
table(keepGene);dim(ct)
dim(ct[keepGene,])
ct <- ct[keepGene,]
rownames(ct) <- geneLists[keepGene]
(colData <- data.frame(row.names=colnames(ct), group_list=group_list,genotype=genotype,era=era) )
era=factor(g_leaf[,7])
geneLists <-  row.names(ct)
# ????????????
keepGene <- rowSums(edgeR::cpm(ct)>0) >=4 ##Filtering. Only keep in the analysis those genes which had > 0 reads per million mapped reads in at least two libraries.
table(keepGene);dim(ct)
dim(ct[keepGene,])
ct <- ct[keepGene,]
rownames(ct) <- geneLists[keepGene]
(colData <- data.frame(row.names=colnames(ct), group_list=group_list,genotype=genotype) )
(colData <- data.frame(row.names=colnames(ct), group_list=group_list,genotype=genotype,era=era) )
View(ct_l)
View(g_leaf)
era=factor(g_leaf[,6])
(colData <- data.frame(row.names=colnames(ct), group_list=group_list,genotype=genotype,era=era) )
### ??????DESeqDataSet??????
# ?????????????????????????????????????????????????????????????????????????????????????????????:
dds <- DESeqDataSetFromMatrix(countData = ct,
colData = colData,
design = ~ group_list+genotype+era)
View(colData)
library(data.table)
library(Ropt)
library(DESeq2)
library(edgeR)
library(pheatmap)
library("RColorBrewer")
##http://www.bioconductor.org/packages/devel/bioc/vignettes/DESeq2/inst/doc/DESeq2.html
############????????????????????????#############################
ct=fread("counts.txt",head=T,data.table=F,skip=1)
ct[,1]=gsub("gene:","",ct[,1])
rownames(ct)=ct[,1]
ct=ct[,-c(1:6)]
group_info <- read.table("group_info.txt", stringsAsFactors = F, header = T)
g_leaf_HN=group_info[group_info[,4]=="Leaf" & group_info[,5]=="HN",]
g_leaf_LN=group_info[group_info[,4]=="Leaf" & group_info[,5]=="LN",]
g_leaf_new=group_info[group_info[,4]=="Leaf" & group_info[,6]=="NEW",]
g_leaf_old=group_info[group_info[,4]=="Leaf" & group_info[,6]=="OLD",]
g_leaf=group_info[group_info[,4]=="Leaf",]
ct_hn_l=ct[,g_leaf_HN[,7]]
library(data.table)
library(Ropt)
library(DESeq2)
library(edgeR)
library(pheatmap)
library("RColorBrewer")
##http://www.bioconductor.org/packages/devel/bioc/vignettes/DESeq2/inst/doc/DESeq2.html
############????????????????????????#############################
ct=fread("counts.txt",head=T,data.table=F,skip=1)
ct[,1]=gsub("gene:","",ct[,1])
rownames(ct)=ct[,1]
ct=ct[,-c(1:6)]
group_info <- read.table("group_info.txt", stringsAsFactors = F, header = T)
g_leaf=group_info[group_info[,4]=="Leaf",]
ct_l=ct[,g_leaf[,7]]
ct=ct_l
treatment <- factor(g_leaf[,5])
genotype <- factor(g_leaf[,3])
pop<-factor(g_leaf[,6])
geneLists <-  row.names(ct)
# ????????????
keepGene <- rowSums(edgeR::cpm(ct)>0) >=4 ##Filtering. Only keep in the analysis those genes which had > 0 reads per million mapped reads in at least two libraries.
table(keepGene);dim(ct)
dim(ct[keepGene,])
ct <- ct[keepGene,]
rownames(ct) <- geneLists[keepGene]
(colData <- data.frame(row.names=colnames(ct), treatment=treatment,genotype=genotype,pop=pop) )
### ??????DESeqDataSet??????
# ?????????????????????????????????????????????????????????????????????????????????????????????:
dds <- DESeqDataSetFromMatrix(countData = ct,
colData = colData,
design = ~ treatment+pop+treatment:pop)
?DESeqDataSetFromMatrix
?DESeqDataSet
View(group_info)
geno<-factor(g_leaf[,3])
geno
### ??????DESeqDataSet??????
# ?????????????????????????????????????????????????????????????????????????????????????????????:
dds <- DESeqDataSetFromMatrix(countData = ct,
colData = colData,
design = ~ treatment+pop+genotype+treatment:pop)
### ??????DESeqDataSet??????
# ?????????????????????????????????????????????????????????????????????????????????????????????:
dds <- DESeqDataSetFromMatrix(countData = ct,
colData = colData,
design = ~ treatment+pop+treatment:pop)
dds <- DESeq(dds)
resultsNames(dds)
res1=results(dds, contrast=c("condition","LN","HN"))
res1=results(dds, contrast=c("treatment","LN","HN"))
View(res1)
View(group_info)
View(dds)
dds <- DESeqDataSetFromMatrix(countData = ct,
colData = colData,
design = ~ treament+ group_list)
### ??????DESeqDataSet??????
# ?????????????????????????????????????????????????????????????????????????????????????????????:
dds <- DESeqDataSetFromMatrix(countData = ct,
colData = colData,
design = ~ treament+ group_list+treament:group_list)
dds <- DESeqDataSetFromMatrix(countData = ct,
colData = colData,
design = ~ treatment+pop)
dds <- DESeq(dds)
resultsNames(dds)
?DESeqDataSetFromMatrix
dds <- DESeqDataSetFromMatrix(countData = ct,
colData = colData,
design = ~ treatment+pop+genotype)
dds <- DESeqDataSetFromMatrix(countData = ct,
colData = colData,
design = ~ treatment+pop)
dds <- DESeq(dds)
resultsNames(dds)
rld <- rlog( dds )
head( assay(rld) )
colnames(assay(rld))
plot( assay(rld)[, 7:8], col="#00000020", pch=20, cex=0.3 )
plot( assay(rld)[, 1:2], col="#00000020", pch=20, cex=0.3 )
?vst
6*6.5
6*6.8
6*6.4
setwd("E:/UNL_Yang_lab/N_treatment_Jing/08_RNA_SEQ/N_treatment_Four_lines/04DEG")
library(data.table)
library(Ropt)
library(PerformanceAnalytics)
d=fread("FPKM_Old_new_four_lines.csv", header=T,data.table=F)
View(d)
d1=d[,-1]
chart.Correlation(d1, histogram=TRUE, pch=16,col="skyblue")
X=apply(d1,1,function(x){ifelse(x>1,1,0)})
X=apply(d1,1,function(x){ifelse(all(x)>1,1,0)})
X=apply(d1,1,function(x){ifelse(any(x)>1,1,0)})
d1=d[,-1]
X=apply(d1,1,function(x){ifelse(any(x)>1,1,0)})
View(d1)
any(1:4)>3
X=apply(d1,1,sum)
d2=d1[X>0,]
d2=d1[X>1,]
View(d2)
d3=log2(d2+1)
colnames(d3)
plot(d3[,1],d3[,2])
plot(d3[,1],d3[,2],xlab="Rep1",ylab="Rep2")
plot(d3[,1],d3[,2],xlab="Rep1",ylab="Rep2",main=colnames(d3)[1])
cor.test(d3[,1],d3[,2])
cor.test(d3[,1],d3[,2])$cor
x=
cor.test(d3[,1],d3[,2])
names(x)
cor.test(d3[,1],d3[,2])$estimate
r=cor.test(d3[,1],d3[,2])$estimate
plot(d3[,1],d3[,2],xlab="Rep1",ylab="Rep2",main=qq("{colnames(d3)[1]}_R={r}"))
plot(d3[,1],d3[,2],xlab="Rep1",ylab="Rep2",main=qq("{colnames(d3)[1]}_R={r}"),las=1,pch=16,col=adjustcolor("black",0.6))
plot(d3[,1],d3[,2],xlab="Rep1",ylab="Rep2",main=qq("{colnames(d3)[1]}_R={r}"),las=1,pch=16,col=adjustcolor("black",0.5))
plot(d3[,1],d3[,2],xlab="Rep1",ylab="Rep2",main=qq("{colnames(d3)[1]}_R={r}"),las=1,pch=16,col=adjustcolor("black",0.4))
seq(1,31,by=2)
par(mfrow=c(4,8),mar=c(4,4,1,1))
for(i in seq(1,31,by=2))
{
r=cor.test(d3[,i],d3[,i+1])$estimate
plot(d3[,i],d3[,i+1],xlab="Rep1",ylab="Rep2",main=qq("{colnames(d3)[i]}_R={r}"),las=1,pch=16,col=adjustcolor("black",0.4))
}
r
r=round(r,3)
r
round(r,4)
round(r,digits = 3)
round(r,digits = 4)
signif(r,digits = 3)
r=cor.test(d3[,i],d3[,i+1])$estimate
signif(r,digits = 4)
r=cor.test(d3[,i],d3[,i+1])$estimate
signif(r,digits = 3)
r=cor.test(d3[,i],d3[,i+1])$estimate
r
signif(r,digits = 3)
signif(r,digits = 4)
par(mfrow=c(4,8),mar=c(4,4,1,1))
for(i in seq(1,31,by=2))
{
r=cor.test(d3[,i],d3[,i+1])$estimate
r=signif(r,digits = 4)
plot(d3[,i],d3[,i+1],xlab="Rep1",ylab="Rep2",main=qq("{colnames(d3)[i]}_R={r}"),las=1,pch=16,col=adjustcolor("black",0.4))
}
png("RNA-seq_lib_corr.png",height = 210,width =210,units = "mm",res=600)
par(mfrow=c(4,8),mar=c(4,4,1,1))
for(i in seq(1,31,by=2))
{
r=cor.test(d3[,i],d3[,i+1])$estimate
r=signif(r,digits = 4)
plot(d3[,i],d3[,i+1],xlab="Rep1",ylab="Rep2",main=qq("{colnames(d3)[i]}_R={r}"),las=1,pch=16,col=adjustcolor("black",0.4),cex=.7)
}
dev.off()
i
png("RNA-seq_lib_corr.png",height = 240,width =210,units = "mm",res=600)
par(mfrow=c(8,4),mar=c(4,4,1,1))
for(i in seq(1,31,by=2))
{
r=cor.test(d3[,i],d3[,i+1])$estimate
r=signif(r,digits = 4)
plot(d3[,i],d3[,i+1],xlab="Rep1",ylab="Rep2",main=qq("{colnames(d3)[i]}_R={r}"),las=1,pch=16,col=adjustcolor("black",0.4),cex=.7)
}
dev.off()
png("RNA-seq_lib_corr.png",height = 240,width =210,units = "mm",res=600)
par(mfrow=c(4,4),mar=c(4,4,1,1))
for(i in seq(1,31,by=2))
{
r=cor.test(d3[,i],d3[,i+1])$estimate
r=signif(r,digits = 4)
plot(d3[,i],d3[,i+1],xlab="Rep1",ylab="Rep2",main=qq("{colnames(d3)[i]}_R={r}"),las=1,pch=16,col=adjustcolor("black",0.4),cex=.7)
}
dev.off()
re=NULL
for(i in seq(1,31,by=2))
{
r=cor.test(d3[,i],d3[,i+1])$estimate
r=signif(r,digits = 4)
plot(d3[,i],d3[,i+1],xlab="Rep1",ylab="Rep2",main=qq("{colnames(d3)[i]}_R={r}"),las=1,pch=16,col=adjustcolor("black",0.4),cex=.7)
re=c(re,r)
}
re
q()
library(data.table)
library(Ropt)
library(PerformanceAnalytics)
d=fread("FPKM_Old_new_four_lines.csv", header=T,data.table=F)
d1=d[,-1]
X=apply(d1,1,sum)
d2=d1[X>1,]
d3=log2(d2+1)
png("RNA-seq_lib_corr2.png",height = 240,width =210,units = "mm",res=600)
par(mfrow=c(4,4),mar=c(4,4,1,1))
re=NULL
for(i in seq(1,31,by=2))
{
r=cor.test(d3[,i],d3[,i+1])$estimate
r=signif(r,digits = 4)
plot(d3[,i],d3[,i+1],xlab="",ylab="",main="",las=1,pch=16,col=adjustcolor("black",0.4),cex=.7)
re=c(re,r)
}
dev.off()
mean(r)
re=NULL
for(i in seq(1,31,by=2))
{
r=cor.test(d3[,i],d3[,i+1])$estimate
r=signif(r,digits = 4)
# plot(d3[,i],d3[,i+1],xlab="",ylab="",main="",las=1,pch=16,col=adjustcolor("black",0.4),cex=.7)
re=c(re,r^2)
}
mean(re)
tiff("RNA-seq_lib_corr2.tiff",height = 220,width =210,units = "mm",res=600)
par(mfrow=c(4,4),mar=c(4,4,1,1))
re=NULL
for(i in seq(1,31,by=2))
{
r=cor.test(d3[,i],d3[,i+1])$estimate
r=signif(r,digits = 4)
plot(d3[,i],d3[,i+1],xlab="",ylab="",main="",las=1,pch=16,col=adjustcolor("black",0.4),cex=.7)
re=c(re,r)
}
dev.off()
r=cor.test(d3[,i],d3[,i+1])$estimate
r=signif(r,digits = 4)
#plot(d3[,i],d3[,i+1],xlab="",ylab="",main="",las=1,pch=16,col=adjustcolor("black",0.4),cex=.7)
re=c(re,r)
mean(re)
re=NULL
for(i in seq(1,31,by=2))
{
r=cor.test(d3[,i],d3[,i+1])$estimate
r=signif(r,digits = 4)
#plot(d3[,i],d3[,i+1],xlab="",ylab="",main="",las=1,pch=16,col=adjustcolor("black",0.4),cex=.7)
re=c(re,r)
}
mean(re)
re
colnames(d3)
id=seq(1,31,by=2)
tiff("RNA-seq_lib_corr3.tiff",height = 220,width =210,units = "mm",res=600)
par(mfrow=c(4,4),mar=c(4,4,1,1))
re=NULL
id=seq(1,31,by=2)
id=id[1,5,9,13,3,7,11,15,17,21,25,29,19,23,27,31]
for(i in seq(1,31,by=2))
{
r=cor.test(d3[,i],d3[,i+1])$estimate
r=signif(r,digits = 4)
plot(d3[,i],d3[,i+1],xlab="",ylab="",main="",las=1,pch=16,col=adjustcolor("black",0.4),cex=.7)
re=c(re,r)
}
dev.off()
d=fread("FPKM_Old_new_four_lines.csv", header=T,data.table=F)
d1=d[,-1]
X=apply(d1,1,sum)
d2=d1[X>1,]
d3=log2(d2+1)
tiff("RNA-seq_lib_corr3.tiff",height = 220,width =210,units = "mm",res=600)
par(mfrow=c(4,4),mar=c(4,4,1,1))
re=NULL
id=seq(1,31,by=2)
id=id[c(1,5,9,13,3,7,11,15,17,21,25,29,19,23,27,31)]
for(i in seq(1,31,by=2))
{
r=cor.test(d3[,i],d3[,i+1])$estimate
r=signif(r,digits = 4)
plot(d3[,i],d3[,i+1],xlab="",ylab="",main="",las=1,pch=16,col=adjustcolor("black",0.4),cex=.7)
re=c(re,r)
}
dev.off()
colnames(d3)[id]
View(d3)
id=seq(1,31,by=2)
id=id[c(1,5,9,13,3,7,11,15,17,21,25,29,19,23,27,31)]
id
id=seq(1,31,by=2)
id
colnames(d3)
d3=log2(d2+1)
re=NULL
d3=d3[,c(1,2,5,6,9,10,13,14,3,4,7,8,11,12,15,16,17,18,21,22,25,26,29,30,19,20,23,24,27,28,31,32)]
colnames(d3)
d3=log2(d2+1)
tiff("RNA-seq_lib_corr3.tiff",height = 220,width =210,units = "mm",res=600)
par(mfrow=c(4,4),mar=c(4,4,1,1))
re=NULL
d3=d3[,c(1,2,5,6,9,10,13,14,3,4,7,8,11,12,15,16,17,18,21,22,25,26,29,30,19,20,23,24,27,28,31,32)]
id=seq(1,31,by=2)
for(i in seq(1,31,by=2))
{
r=cor.test(d3[,i],d3[,i+1])$estimate
r=signif(r,digits = 4)
plot(d3[,i],d3[,i+1],xlab="",ylab="",main="",las=1,pch=16,col=adjustcolor("black",0.4),cex=.7)
re=c(re,r)
}
dev.off()
re
